{"ast":null,"code":"var _jsxFileName = \"/Users/frederickchoe/Projects/React Notes/react_wedding/src/Countdown.js\";\nimport React, { Component } from \"react\";\nvar element = document.getElementById(\"counter\");\n\nif (typeof element != 'undefined' && element != null) {\n  var countDownDate = new Date(\"September 5, 2020 16:00:00\").getTime();\n  var x = setInterval(function () {\n    // Get today's date and time\n    var now = new Date().getTime(); // Find the distance between now and the count down date\n\n    var distance = countDownDate - now; // Time calculations for days, hours, minutes and seconds\n\n    var days = Math.floor(distance / (1000 * 60 * 60 * 24));\n    var hours = Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n    var minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n    var seconds = Math.floor(distance % (1000 * 60) / 1000); // Display the result in the element with id=\"demo\"\n\n    document.getElementById(\"counter\").innerHTML = days + \" days \" + hours + \" hours \" + minutes + \" minutes \" + seconds + \" seconds \"; // If the count down is finished, write some text\n\n    if (distance < 0) {\n      clearInterval(x);\n      document.getElementById(\"counter\").innerHTML = \"EXPIRED\";\n    }\n  }, 1000);\n}\n\nclass Countdown extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"date\",\n      id: \"counter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Countdown;","map":{"version":3,"sources":["/Users/frederickchoe/Projects/React Notes/react_wedding/src/Countdown.js"],"names":["React","Component","element","document","getElementById","countDownDate","Date","getTime","x","setInterval","now","distance","days","Math","floor","hours","minutes","seconds","innerHTML","clearInterval","Countdown","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAGA,IAAIC,OAAO,GAAIC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAf;;AACA,IAAI,OAAOF,OAAP,IAAmB,WAAnB,IAAkCA,OAAO,IAAI,IAAjD,EACA;AACE,MAAIG,aAAa,GAAG,IAAIC,IAAJ,CAAS,4BAAT,EAAuCC,OAAvC,EAApB;AAEF,MAAIC,CAAC,GAAGC,WAAW,CAAC,YAAW;AAE7B;AACA,QAAIC,GAAG,GAAG,IAAIJ,IAAJ,GAAWC,OAAX,EAAV,CAH6B,CAK7B;;AACA,QAAII,QAAQ,GAAGN,aAAa,GAAGK,GAA/B,CAN6B,CAQ7B;;AACA,QAAIE,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAnB,CAAX;AACA,QAAII,KAAK,GAAGF,IAAI,CAACC,KAAL,CAAYH,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAT,IAAsC,OAAO,EAAP,GAAY,EAAlD,CAAX,CAAZ;AACA,QAAIK,OAAO,GAAGH,IAAI,CAACC,KAAL,CAAYH,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAT,IAAiC,OAAO,EAAxC,CAAX,CAAd;AACA,QAAIM,OAAO,GAAGJ,IAAI,CAACC,KAAL,CAAYH,QAAQ,IAAI,OAAO,EAAX,CAAT,GAA2B,IAAtC,CAAd,CAZ6B,CAc7B;;AACAR,IAAAA,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCc,SAAnC,GAA+CN,IAAI,GAAG,QAAP,GAAkBG,KAAlB,GAA0B,SAA1B,GAC7CC,OAD6C,GACnC,WADmC,GACrBC,OADqB,GACX,WADpC,CAf6B,CAkB7B;;AACA,QAAIN,QAAQ,GAAG,CAAf,EAAkB;AAChBQ,MAAAA,aAAa,CAACX,CAAD,CAAb;AACAL,MAAAA,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCc,SAAnC,GAA+C,SAA/C;AACD;AACF,GAvBkB,EAuBhB,IAvBgB,CAAnB;AAwBC;;AAED,MAAME,SAAN,SAAwBnB,SAAxB,CAAkC;AAChCoB,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,EAAE,EAAC,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAID;;AAN+B;;AASlC,eAAeD,SAAf","sourcesContent":["import React, { Component } from \"react\";\n \n\nvar element =  document.getElementById(\"counter\");\nif (typeof(element) != 'undefined' && element != null)\n{\n  var countDownDate = new Date(\"September 5, 2020 16:00:00\").getTime();\n\nvar x = setInterval(function() {\n\n  // Get today's date and time\n  var now = new Date().getTime();\n\n  // Find the distance between now and the count down date\n  var distance = countDownDate - now;\n\n  // Time calculations for days, hours, minutes and seconds\n  var days = Math.floor(distance / (1000 * 60 * 60 * 24));\n  var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n  var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n  var seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n  // Display the result in the element with id=\"demo\"\n  document.getElementById(\"counter\").innerHTML = days + \" days \" + hours + \" hours \"\n  + minutes + \" minutes \" + seconds + \" seconds \";\n\n  // If the count down is finished, write some text\n  if (distance < 0) {\n    clearInterval(x);\n    document.getElementById(\"counter\").innerHTML = \"EXPIRED\";\n  }\n}, 1000);\n}\n \nclass Countdown extends Component {\n  render() {\n    return (\n      <div className=\"date\" id=\"counter\">\n      </div>\n    );\n  }\n}\n \nexport default Countdown;"]},"metadata":{},"sourceType":"module"}